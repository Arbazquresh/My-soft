{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tron softTech\\\\Task01\\\\task01\\\\src\\\\Components\\\\Update.jsx\";\n// import React, { useEffect, useState } from \"react\";\n// import \"./update.css\";\n// import { Grid, Card, CardContent, TextField } from \"@mui/material\";\n// import Button from \"@mui/material/Button\";\n// import CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\n// import { styled } from \"@mui/material/styles\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// export const Update = () => {\n//   const VisuallyHiddenInput = styled(\"input\")({\n//     clip: \"rect(0 0 0 0)\",\n//     clipPath: \"inset(50%)\",\n//     height: 1,\n//     overflow: \"hidden\",\n//     position: \"absolute\",\n//     bottom: 0,\n//     left: 0,\n//     whiteSpace: \"nowrap\",\n//     width: 1,\n//   });\n\n//   const { categoryId } = useParams(); // Correctly call useParams\n//   const [categoryName, setCategoryName] = useState(\"\");\n//   const [file, setFile] = useState(null);\n//   const [fileName, setFileName] = useState(\"\");\n\n//   useEffect(() => {\n//     if (categoryId) {\n//       axios\n//         .get(`http://localhost:8090/api/category/${categoryId}`)\n//         .then((resp) => {\n//           console.log(resp.data);\n//           setCategoryName(resp.data.categoryName || \"\");\n//         })\n//         .catch((err) => console.log(err));\n//     }\n//   }, [categoryId]);\n\n//   const handleFileChange = (event) => {\n//     const selectedFile = event.target.files[0];\n//     if (selectedFile) {\n//       setFile(selectedFile);\n//       setFileName(selectedFile.name);\n//     }\n//   };\n\n//   const handleSubmit = () => {\n//     const formData = new FormData();\n//     formData.append(\"categoryName\", categoryName);\n//     if (file) {\n//       formData.append(\"file\", file);\n//     }\n\n//     axios\n//       .put(\n//         `http://localhost:8090/api/category/update/${categoryId}`,\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       )\n//       .then((response) => {\n//         console.log(response.data);\n//         alert(\"Category updated successfully.\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error updating category:\", error);\n//       });\n//   };\n\n//   return (\n//     <Grid\n//       container\n//       spacing={2}\n//       justifyContent=\"center\"\n//       alignItems=\"center\"\n//       style={{ minHeight: \"100vh\" }}\n//     >\n//       <Grid item xs={12} md={6}>\n//         <Card>\n//           <CardContent>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   fullWidth\n//                   label=\"Enter Category Name\"\n//                   value={categoryName}\n//                   onChange={(e) => setCategoryName(e.target.value)}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <Button\n//                   component=\"label\"\n//                   role={undefined}\n//                   variant=\"contained\"\n//                   startIcon={<CloudUploadIcon />}\n//                 >\n//                   Upload file\n//                   <VisuallyHiddenInput\n//                     type=\"file\"\n//                     onChange={handleFileChange}\n//                   />\n//                 </Button>\n//                 {fileName && <span style={{ marginLeft: 10 }}>{fileName}</span>}\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <Button\n//                   fullWidth\n//                   variant=\"contained\"\n//                   color=\"success\"\n//                   onClick={handleSubmit}\n//                 >\n//                   Submit\n//                 </Button>\n//               </Grid>\n//             </Grid>\n//           </CardContent>\n//         </Card>\n//       </Grid>\n//     </Grid>\n//   );\n// };\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Update = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_c = Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Update","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Tron softTech/Task01/task01/src/Components/Update.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import \"./update.css\";\r\n// import { Grid, Card, CardContent, TextField } from \"@mui/material\";\r\n// import Button from \"@mui/material/Button\";\r\n// import CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\n// import { styled } from \"@mui/material/styles\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// export const Update = () => {\r\n//   const VisuallyHiddenInput = styled(\"input\")({\r\n//     clip: \"rect(0 0 0 0)\",\r\n//     clipPath: \"inset(50%)\",\r\n//     height: 1,\r\n//     overflow: \"hidden\",\r\n//     position: \"absolute\",\r\n//     bottom: 0,\r\n//     left: 0,\r\n//     whiteSpace: \"nowrap\",\r\n//     width: 1,\r\n//   });\r\n\r\n//   const { categoryId } = useParams(); // Correctly call useParams\r\n//   const [categoryName, setCategoryName] = useState(\"\");\r\n//   const [file, setFile] = useState(null);\r\n//   const [fileName, setFileName] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     if (categoryId) {\r\n//       axios\r\n//         .get(`http://localhost:8090/api/category/${categoryId}`)\r\n//         .then((resp) => {\r\n//           console.log(resp.data);\r\n//           setCategoryName(resp.data.categoryName || \"\");\r\n//         })\r\n//         .catch((err) => console.log(err));\r\n//     }\r\n//   }, [categoryId]);\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const selectedFile = event.target.files[0];\r\n//     if (selectedFile) {\r\n//       setFile(selectedFile);\r\n//       setFileName(selectedFile.name);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = () => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"categoryName\", categoryName);\r\n//     if (file) {\r\n//       formData.append(\"file\", file);\r\n//     }\r\n\r\n//     axios\r\n//       .put(\r\n//         `http://localhost:8090/api/category/update/${categoryId}`,\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       )\r\n//       .then((response) => {\r\n//         console.log(response.data);\r\n//         alert(\"Category updated successfully.\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error updating category:\", error);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <Grid\r\n//       container\r\n//       spacing={2}\r\n//       justifyContent=\"center\"\r\n//       alignItems=\"center\"\r\n//       style={{ minHeight: \"100vh\" }}\r\n//     >\r\n//       <Grid item xs={12} md={6}>\r\n//         <Card>\r\n//           <CardContent>\r\n//             <Grid container spacing={2}>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   variant=\"outlined\"\r\n//                   fullWidth\r\n//                   label=\"Enter Category Name\"\r\n//                   value={categoryName}\r\n//                   onChange={(e) => setCategoryName(e.target.value)}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <Button\r\n//                   component=\"label\"\r\n//                   role={undefined}\r\n//                   variant=\"contained\"\r\n//                   startIcon={<CloudUploadIcon />}\r\n//                 >\r\n//                   Upload file\r\n//                   <VisuallyHiddenInput\r\n//                     type=\"file\"\r\n//                     onChange={handleFileChange}\r\n//                   />\r\n//                 </Button>\r\n//                 {fileName && <span style={{ marginLeft: 10 }}>{fileName}</span>}\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <Button\r\n//                   fullWidth\r\n//                   variant=\"contained\"\r\n//                   color=\"success\"\r\n//                   onClick={handleSubmit}\r\n//                 >\r\n//                   Submit\r\n//                 </Button>\r\n//               </Grid>\r\n//             </Grid>\r\n//           </CardContent>\r\n//         </Card>\r\n//       </Grid>\r\n//     </Grid>\r\n//   );\r\n// };\r\n\r\nimport React from \"react\";\r\n\r\nexport const Update = () => {\r\n  return (\r\n    <div>\r\n      <h1>hello</h1>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1B,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACC,EAAA,GANWN,MAAM;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}