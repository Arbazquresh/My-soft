{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tron softTech\\\\Task01\\\\task01\\\\src\\\\Components\\\\Fetching.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Fetching = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Function to fetch data from the API\n  const getData = async () => {\n    try {\n      const result = await axios.get(\"https://fakestoreapi.com/products\");\n      setData(result.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setError(error);\n    }\n  };\n\n  // Effect hook to fetch data on component mount\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error fetching data: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: \"\",\n          height: 200,\n          width: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Fetching, \"nD7edIDRwNLC+/bSdKREAvtAsyY=\");\n_c = Fetching;\nvar _c;\n$RefreshReg$(_c, \"Fetching\");","map":{"version":3,"names":["React","useEffect","useState","Grid","axios","jsxDEV","_jsxDEV","Fetching","_s","data","setData","error","setError","getData","result","get","console","container","spacing","children","item","xs","message","fileName","_jsxFileName","lineNumber","columnNumber","map","title","description","src","image","alt","height","width","id","_c","$RefreshReg$"],"sources":["D:/Tron softTech/Task01/task01/src/Components/Fetching.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nexport const Fetching = () => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Function to fetch data from the API\r\n  const getData = async () => {\r\n    try {\r\n      const result = await axios.get(\"https://fakestoreapi.com/products\");\r\n      setData(result.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  // Effect hook to fetch data on component mount\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        {error && <div>Error fetching data: {error.message}</div>}\r\n        {data.map((item) => (\r\n          <div key={item.id}>\r\n            <h1>{item.title}</h1>\r\n            <p>{item.description}</p>\r\n            <img src={item.image} alt=\"\" height={200} width={200} />\r\n          </div>\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,eAAe;AACpC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,CAAC;MACnEL,OAAO,CAACI,MAAM,CAACL,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACdY,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACH,IAAI;IAACc,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,eACzBb,OAAA,CAACH,IAAI;MAACiB,IAAI;MAACC,EAAE,EAAE,EAAG;MAAAF,QAAA,GACfR,KAAK,iBAAIL,OAAA;QAAAa,QAAA,GAAK,uBAAqB,EAACR,KAAK,CAACW,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACxDjB,IAAI,CAACkB,GAAG,CAAEP,IAAI,iBACbd,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKC,IAAI,CAACQ;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBpB,OAAA;UAAAa,QAAA,EAAIC,IAAI,CAACS;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBpB,OAAA;UAAKwB,GAAG,EAAEV,IAAI,CAACW,KAAM;UAACC,GAAG,EAAC,EAAE;UAACC,MAAM,EAAE,GAAI;UAACC,KAAK,EAAE;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAHhDN,IAAI,CAACe,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAAClB,EAAA,CAlCWD,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}