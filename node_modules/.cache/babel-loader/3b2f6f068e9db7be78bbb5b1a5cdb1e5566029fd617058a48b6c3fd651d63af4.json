{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tron softTech\\\\Task01\\\\task01\\\\src\\\\Components\\\\Check.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Check = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [data, setData] = useState([]);\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleSaveClick = () => {\n    setIsEditing(false);\n    // Optionally, you can handle saving the input value to a server or state management here\n  };\n  const handleCancelClick = () => {\n    setIsEditing(false);\n    // Optionally, you can revert the input value if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveClick,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelClick,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditClick,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Check, \"Ls55PYoDYzVRN2Dit7qoA4ufmLU=\");\n_c = Check;\nvar _c;\n$RefreshReg$(_c, \"Check\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Check","_s","inputValue","setInputValue","isEditing","setIsEditing","data","setData","handleInputChange","e","target","value","handleEditClick","handleSaveClick","handleCancelClick","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Tron softTech/Task01/task01/src/Components/Check.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const Check = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleEditClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSaveClick = () => {\r\n    setIsEditing(false);\r\n    // Optionally, you can handle saving the input value to a server or state management here\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setIsEditing(false);\r\n    // Optionally, you can revert the input value if needed\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isEditing ? (\r\n        <div>\r\n          <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n          <button onClick={handleSaveClick}>Save</button>\r\n          <button onClick={handleCancelClick}>Cancel</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <span>{inputValue}</span>\r\n          <button onClick={handleEditClick}>Edit</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/BN,aAAa,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BP,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5BR,YAAY,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9BT,YAAY,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAgB,QAAA,EACGX,SAAS,gBACRL,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACL,KAAK,EAAET,UAAW;QAACe,QAAQ,EAAET;MAAkB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrEtB,OAAA;QAAQuB,OAAO,EAAET,eAAgB;QAAAE,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/CtB,OAAA;QAAQuB,OAAO,EAAER,iBAAkB;QAAAC,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,gBAENtB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAOb;MAAU;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBtB,OAAA;QAAQuB,OAAO,EAAEV,eAAgB;QAAAG,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAvCWD,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}