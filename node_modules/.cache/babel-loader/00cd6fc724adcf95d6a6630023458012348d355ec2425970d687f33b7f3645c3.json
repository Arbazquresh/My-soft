{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import {\n//   CardContent,\n//   Card,\n//   Grid,\n//   TextField,\n//   InputAdornment,\n//   IconButton,\n// } from \"@mui/material\";\n// import { Search } from \"@mui/icons-material\";\n\n// import axios from \"axios\";\n// import { Selectbar } from \"./Selectbar\";\n// import { Bill } from \"./Bill\";\n\n// export const Fetching = () => {\n//   const [data, setData] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [selectedItems, setSelectedItems] = useState([]);\n\n//   // Fetch data from the API\n//   const getData = async () => {\n//     try {\n//       const result = await axios.get(\"https://fakestoreapi.com/products\");\n//       setData(result.data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     getData();\n//   }, []);\n\n//   // Handle change in search input\n//   const handleSearchChange = (event) => {\n//     setSearchQuery(event.target.value);\n//   };\n\n//   // Handle image click to add item to the billing section\n//   const handleImageClick = (item) => {\n//     setSelectedItems((prevItems) => {\n//       const existingItem = prevItems.find((i) => i.id === item.id);\n//       if (existingItem) {\n//         return prevItems.map((i) =>\n//           i.id === item.id ? { ...i, quantity: i.quantity + 1 } : i\n//         );\n//       } else {\n//         return [\n//           ...prevItems,\n//           { id: item.id, category: item.category, quantity: 1 },\n//         ];\n//       }\n//     });\n//   };\n\n//   // Filter data based on search query\n//   const filteredData = data.filter((item) =>\n//     item.category.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//   return (\n//     <Grid container spacing={2}>\n//       <Grid item xs={6}>\n//         <TextField\n//           label=\"Search by category\"\n//           variant=\"outlined\"\n//           value={searchQuery}\n//           onChange={handleSearchChange}\n//           sx={{\n//             marginBottom: \"20px\",\n//             width: \"100%\",\n//             \"& .MuiOutlinedInput-root\": {\n//               borderRadius: \"20px\",\n//             },\n//           }}\n//           InputProps={{\n//             endAdornment: (\n//               <InputAdornment position=\"end\">\n//                 <Search />\n//               </InputAdornment>\n//             ),\n//           }}\n//         />\n//       </Grid>\n//       <Grid item xs={6}>\n//         <Selectbar />\n//       </Grid>\n//       <Grid item xs={12}>\n//         <Grid container spacing={2}>\n//           {filteredData.map((item) => (\n//             <Grid item xs={3} key={item.id}>\n//               <Card\n//                 sx={{ height: \"200px\", backgroundColor: \"#f2f2f2\" }}\n//                 onClick={() => handleImageClick(item)}\n//               >\n//                 <CardContent>\n//                   <img\n//                     src={item.image}\n//                     alt={item.title}\n//                     height={100}\n//                     width={100}\n//                   />\n//                   <h4>{item.category}</h4>\n//                 </CardContent>\n//               </Card>\n//             </Grid>\n//           ))}\n//         </Grid>\n//         {/* <Bill\n//           selectedItems={selectedItems}\n//           setSelectedItems={setSelectedItems}\n//         /> */}\n//       </Grid>\n//     </Grid>\n//   );\n// };","map":{"version":3,"names":[],"sources":["D:/Tron softTech/Task01/task01/src/Components/Fetching.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   CardContent,\r\n//   Card,\r\n//   Grid,\r\n//   TextField,\r\n//   InputAdornment,\r\n//   IconButton,\r\n// } from \"@mui/material\";\r\n// import { Search } from \"@mui/icons-material\";\r\n\r\n// import axios from \"axios\";\r\n// import { Selectbar } from \"./Selectbar\";\r\n// import { Bill } from \"./Bill\";\r\n\r\n// export const Fetching = () => {\r\n//   const [data, setData] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n//   // Fetch data from the API\r\n//   const getData = async () => {\r\n//     try {\r\n//       const result = await axios.get(\"https://fakestoreapi.com/products\");\r\n//       setData(result.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getData();\r\n//   }, []);\r\n\r\n//   // Handle change in search input\r\n//   const handleSearchChange = (event) => {\r\n//     setSearchQuery(event.target.value);\r\n//   };\r\n\r\n//   // Handle image click to add item to the billing section\r\n//   const handleImageClick = (item) => {\r\n//     setSelectedItems((prevItems) => {\r\n//       const existingItem = prevItems.find((i) => i.id === item.id);\r\n//       if (existingItem) {\r\n//         return prevItems.map((i) =>\r\n//           i.id === item.id ? { ...i, quantity: i.quantity + 1 } : i\r\n//         );\r\n//       } else {\r\n//         return [\r\n//           ...prevItems,\r\n//           { id: item.id, category: item.category, quantity: 1 },\r\n//         ];\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   // Filter data based on search query\r\n//   const filteredData = data.filter((item) =>\r\n//     item.category.toLowerCase().includes(searchQuery.toLowerCase())\r\n//   );\r\n\r\n//   return (\r\n//     <Grid container spacing={2}>\r\n//       <Grid item xs={6}>\r\n//         <TextField\r\n//           label=\"Search by category\"\r\n//           variant=\"outlined\"\r\n//           value={searchQuery}\r\n//           onChange={handleSearchChange}\r\n//           sx={{\r\n//             marginBottom: \"20px\",\r\n//             width: \"100%\",\r\n//             \"& .MuiOutlinedInput-root\": {\r\n//               borderRadius: \"20px\",\r\n//             },\r\n//           }}\r\n//           InputProps={{\r\n//             endAdornment: (\r\n//               <InputAdornment position=\"end\">\r\n//                 <Search />\r\n//               </InputAdornment>\r\n//             ),\r\n//           }}\r\n//         />\r\n//       </Grid>\r\n//       <Grid item xs={6}>\r\n//         <Selectbar />\r\n//       </Grid>\r\n//       <Grid item xs={12}>\r\n//         <Grid container spacing={2}>\r\n//           {filteredData.map((item) => (\r\n//             <Grid item xs={3} key={item.id}>\r\n//               <Card\r\n//                 sx={{ height: \"200px\", backgroundColor: \"#f2f2f2\" }}\r\n//                 onClick={() => handleImageClick(item)}\r\n//               >\r\n//                 <CardContent>\r\n//                   <img\r\n//                     src={item.image}\r\n//                     alt={item.title}\r\n//                     height={100}\r\n//                     width={100}\r\n//                   />\r\n//                   <h4>{item.category}</h4>\r\n//                 </CardContent>\r\n//               </Card>\r\n//             </Grid>\r\n//           ))}\r\n//         </Grid>\r\n//         {/* <Bill\r\n//           selectedItems={selectedItems}\r\n//           setSelectedItems={setSelectedItems}\r\n//         /> */}\r\n//       </Grid>\r\n//     </Grid>\r\n//   );\r\n// };\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}